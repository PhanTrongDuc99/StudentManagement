/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub;

import dao.StudentUnofficialDaoImpl;
import entities.Profile;
import entities.Register;
import entities.StudentUnofficial;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import utils.ImageUtils;

/**
 *
 * @author SMILE ^^
 */
public class ListOfStudentsFrame extends javax.swing.JFrame {

    /**
     * Creates new form ListOfStudentsFrame
     */
    private final Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    private JTable tblStudent;

    private DefaultTableModel model;
    private JScrollPane js;
    private List<StudentUnofficial> listProfileStudents = new ArrayList<>();

    public ListOfStudentsFrame() {

        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        pnBg.setPreferredSize(screenSize);
        tblStudent = new JTable();
        js = new JScrollPane(tblStudent);

        //add(js);
        initEvents();
    }

    public ListOfStudentsFrame(List<StudentUnofficial> studentUnofficials, String gradeName) {

        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        pnBg.setPreferredSize(screenSize);
        tblStudent = new JTable();
        js = new JScrollPane(tblStudent);

        pnBg.add(js, java.awt.BorderLayout.CENTER);
        lbTitile.setText("GRADE: " + gradeName);
        //add(js);
        this.listProfileStudents = studentUnofficials;
        initEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnBg = new javax.swing.JPanel();
        pnTop = new javax.swing.JPanel();
        lbTitile = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(ImageUtils.load(getClass().getResource("/images/logo.png").getPath()));

        pnBg.setBackground(new java.awt.Color(199, 229, 249));
        pnBg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        pnBg.setPreferredSize(new java.awt.Dimension(700, 505));
        pnBg.setLayout(new java.awt.BorderLayout());

        pnTop.setBackground(new java.awt.Color(0, 0, 102));
        pnTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        pnTop.setPreferredSize(new java.awt.Dimension(675, 50));

        lbTitile.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbTitile.setForeground(new java.awt.Color(255, 255, 255));
        lbTitile.setText("CLASS");
        pnTop.add(lbTitile);

        pnBg.add(pnTop, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(pnBg, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListOfStudentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListOfStudentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListOfStudentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListOfStudentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListOfStudentsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbTitile;
    private javax.swing.JPanel pnBg;
    private javax.swing.JPanel pnTop;
    // End of variables declaration//GEN-END:variables
     private void initEvents() {
        showButtonEvents();
        events();
        //btAddEvents();
    }

    private void loadDataIntoJTable(List<StudentUnofficial> studentUnofficials) {
        studentUnofficials.forEach(t -> System.out.println(t.getId()));
        model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                //Only the third column
                return false;
            }
        };
        //Set Column Title
        Vector column = new Vector();
        column.add("Id");
        column.add("Name");
        column.add("Gender");
        column.add("Phone number");
        column.add("Email");
        column.add("Register Status");

//        column.add("Show Details");
        model.setColumnIdentifiers(column);
        for (int i = 0; i < studentUnofficials.size(); i++) {
            StudentUnofficial s = (StudentUnofficial) studentUnofficials.get(i);
            Profile pro = s.getProfile();
            Register register = s.getRegister();
            System.out.println(pro);
            Vector row = new Vector();
            row.add(s.getId());
            row.add(pro.getFullName());
            row.add(pro.isGender());
            row.add(pro.getPhoneNumber());
            row.add(pro.getEmail());
            row.add(register.getStatus());
            // row.add("<html><a href='show' onClick='print();' >Show</a></html>");
            model.addRow(row);
        }

        tblStudent.setModel(model);
        tblStudent.setRowSelectionAllowed(false);
        tblStudent.setCellSelectionEnabled(true);
        tblStudent.setFocusable(false);
    }

    private void events() {
        tblStudent.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = tblStudent.rowAtPoint(evt.getPoint());
                int col = tblStudent.columnAtPoint(evt.getPoint());
                if ((row >= 0 && col == 9)) {
                    Object[] rowData = new Object[tblStudent.getColumnCount()];
                    for (int i = row; i < tblStudent.getColumnCount(); i++) {
                        rowData[i] = tblStudent.getValueAt(0, i);
                    }
                    StudentUnofficial student = new StudentUnofficialDaoImpl().getStudent((String) rowData[0]);
                    DetailStudentUnOfficialForm detailStudentUnOfficial = new DetailStudentUnOfficialForm(student);
                    detailStudentUnOfficial.setVisible(true);

                }
            }
        });
    }

    private void showButtonEvents() {

        loadDataIntoJTable(listProfileStudents);

    }

//    private void btAddEvents() {
//
//        btAdd.addMouseListener(new MouseAdapter() {
//            @Override
//            public void mousePressed(MouseEvent e) {
//                btAdd.setVisible(false);
//                JButton btShowRemaingStudents = new JButton("Show Waiting Students");
//                btShowRemaingStudents.setBackground(new java.awt.Color(255, 255, 255));
//                btShowRemaingStudents.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
//                JButton btShowStudentOfficials = new JButton("Show Student Officials");
//
//                btShowStudentOfficials.setBackground(new java.awt.Color(255, 255, 255));
//                btShowStudentOfficials.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
//
//                pnCenterTop.add(btShowStudentOfficials);
//                pnCenterTop.add(btShowRemaingStudents);
//                btShowStudentOfficials.setVisible(true);
//                btShowRemaingStudents.setVisible(true);
//            }
//
//        });
//    }
}
