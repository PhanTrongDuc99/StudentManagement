/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub;

import entities.Profile;
import java.awt.Frame;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import service.ProfileServiceImpl;
import utils.ImageUtils;
import utils.SizeUtils;

/**
 *
 * @author USER
 */
public class StudentInformationForm extends javax.swing.JFrame {

    /**
     * Creates new form StudentInformationForm
     */
    public StudentInformationForm() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        tblStudent = new JTable();
        js = new JScrollPane(tblStudent);
        js.setBounds(20, 120, getWidth() - 50, 450);
        add(js);
        initEvens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        exportExcel = new javax.swing.JButton();
        inputButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        objectLabel = new javax.swing.JLabel();
        objectComboBox = new javax.swing.JComboBox<>();
        showButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Information");
        setBackground(new java.awt.Color(255, 255, 255));
        setExtendedState(Frame
            .MAXIMIZED_BOTH);
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(1000, 700));
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        searchTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(searchTextField);
        searchTextField.setBounds(70, 30, 210, 30);

        searchButton.setIcon(ImageUtils.loadImageIcon(getClass().getResource("/images/search_icon.png").getPath(), 30, 30));
        searchButton.setMaximumSize(new java.awt.Dimension(33, 30));
        searchButton.setMinimumSize(new java.awt.Dimension(33, 30));
        searchButton.setPreferredSize(new java.awt.Dimension(33, 30));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton);
        searchButton.setBounds(20, 30, 40, 30);

        exportExcel.setBackground(new java.awt.Color(204, 0, 0));
        exportExcel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exportExcel.setForeground(new java.awt.Color(255, 255, 255));
        exportExcel.setText("Xuất Excel");
        getContentPane().add(exportExcel);
        exportExcel.setBounds(410, 30, 100, 30);

        inputButton.setBackground(new java.awt.Color(51, 204, 0));
        inputButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        inputButton.setForeground(new java.awt.Color(255, 255, 255));
        inputButton.setText("Nhập dữ liệu");
        getContentPane().add(inputButton);
        inputButton.setBounds(520, 30, 110, 30);

        addButton.setBackground(new java.awt.Color(51, 204, 0));
        addButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Thêm mới");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton);
        addButton.setBounds(300, 30, 100, 30);

        objectLabel.setIcon(ImageUtils.loadImageIcon(getClass().getResource("/images/default_avatar.png").getPath(), 35, 35)
        );
        objectLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(objectLabel);
        objectLabel.setBounds(24, 74, 40, 40);

        objectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student Unofficial", "Student Official", "Teacher" }));
        objectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                objectComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(objectComboBox);
        objectComboBox.setBounds(80, 80, 110, 30);

        showButton.setBackground(new java.awt.Color(0, 0, 255));
        showButton.setForeground(new java.awt.Color(255, 255, 255));
        showButton.setText("Show");
        getContentPane().add(showButton);
        showButton.setBounds(220, 80, 80, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void objectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_objectComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_objectComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentInformationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentInformationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentInformationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentInformationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentInformationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton exportExcel;
    private javax.swing.JButton inputButton;
    private javax.swing.JComboBox<String> objectComboBox;
    private javax.swing.JLabel objectLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton showButton;
    // End of variables declaration//GEN-END:variables
    private JTable tblStudent;
    private DefaultTableModel model;
    private JScrollPane js;

    private final List<Profile> listProfileStudents = new ProfileServiceImpl().getProfileStudents();
    private final List<Profile> listProfileTeachers = new ProfileServiceImpl().getProfileTeacher();

    private void loadDataStudentIntoJTable(List<Profile> list) {
        list.forEach(t -> System.out.println(t.getId()));
        //tblStudent.setPreferredSize(new Dimension(500,500));
        model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                //Only the third column
                return false;
            }
        };
        //Set Column Title
        Vector column = new Vector();
        column.add("Name");
        column.add("Phone number");
        column.add("Email");
        column.add("Gender");
        column.add("Day of Birth");
        column.add("Hometown");
        column.add("Current address");
        column.add("Id Number");
        column.add("Show Details");

        model.setColumnIdentifiers(column);
        for (int i = 0; i < list.size(); i++) {
            Profile pro = (Profile) list.get(i);
            Vector row = new Vector();
            row.add(pro.getFullName());
            row.add(pro.getPhoneNumber());
            row.add(pro.getEmail());
            row.add(pro.isGender());
            row.add(pro.getDayOfBirth());
            row.add(pro.getHomeTown());
            row.add(pro.getCurrentAddress());
            row.add(pro.getIdNumber());
            row.add("<html><a href='show' onClick='print();' >Show</a></html>");
            model.addRow(row);
        }

        tblStudent.setModel(model);
        tblStudent.setRowSelectionAllowed(false);
        tblStudent.setCellSelectionEnabled(true);
        tblStudent.setFocusable(false);
    }

    private void initEvens() {
        showButtonEvents();
        evens();
    }

    private void showButtonEvents() {
        showButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int indexSelected = objectComboBox.getSelectedIndex();
                if (indexSelected == 0) {
                    objectLabel.setIcon(ImageUtils.loadImageIcon(getClass().getResource("/images/default_avatar.png").getPath(),
                            SizeUtils.getPreWidth(objectLabel),
                            SizeUtils.getPreHeight(objectLabel)
                    ));
                    loadDataStudentIntoJTable(listProfileStudents);
                } else {
                    objectLabel.setIcon(ImageUtils.loadImageIcon(getClass().getResource("/images/student.png").getPath(),
                            SizeUtils.getPreWidth(objectLabel),
                            SizeUtils.getPreHeight(objectLabel)
                    ));
                    loadDataStudentIntoJTable(listProfileTeachers);
                }
            }
        });
    }

    private void evens() {
        tblStudent.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = tblStudent.rowAtPoint(evt.getPoint());
                int col = tblStudent.columnAtPoint(evt.getPoint());
                if ((row >= 0 && col == 8) && objectComboBox.getSelectedIndex() == 0) {
                    Object[] rowData = new Object[tblStudent.getColumnCount()];
                    for (int i = row; i < tblStudent.getColumnCount(); i++) {
                        rowData[i] = tblStudent.getValueAt(0, i);
                    }
                    DetailStudentForm de = new DetailStudentForm();
                }
            }
        });
    }
}
