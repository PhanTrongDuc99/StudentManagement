/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.sub;
//import model.StudentTableModel;

import entities.Grade;
import entities.Profile;
import entities.StudentOfficial;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import service.GradeService;
import service.GradeServiceImpl;
import service.StudentOfficialService;
import service.StudentOfficialServiceImpl;
import utils.ImageUtils;

/**
 *
 * @author Mr.Chien
 */
public class StudentInformationPanel extends javax.swing.JPanel {

    private Font defaultFont;
    private final Font newFont = new Font("Tahoma", Font.BOLD, 14);

    public StudentInformationPanel() {
        initComponents();
        btAdd.setFocusPainted(false);
        btDelete.setFocusPainted(false);
        tbStudent = new JTable();
        jSGrade = new JScrollPane(tbStudent);
        add(jSGrade);
        loadDataGradeIntoJTable(listStudents);
        initEvents();
    }

    public static void main(String[] args) {
        Frame frame = new Frame();
        frame.setExtendedState(Frame.MAXIMIZED_BOTH);
        frame.add(new StudentInformationPanel());
        frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initEvents() {
        btAddEvents();
        btEditEvents();
        tfSearchEvent();
        btShowEvents();
        detailColumnEvents();
    }

    private void loadDataGradeIntoJTable(List<StudentOfficial> list) {
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

            @Override
            public void setValueAt(Object aValue, int row, int column) {
                
                super.setValueAt(aValue, row, column); //To change body of generated methods, choose Tools | Templates.
            }

        };
        Vector column = new Vector();
        column.add("Id");
        column.add("Name");
        column.add("Grade");
        column.add("Email");
        column.add("Gender");
        column.add("IdNumber");
        column.add("Current Address");
        column.add("Detail");
        column.add("Delete");

        model.setColumnIdentifiers(column);
        for (int i = 0; i < list.size(); i++) {
            Profile pro = (Profile) list.get(i).getProfile();
            Grade grade = list.get(i).getGrade();
            System.out.println(grade);
            Vector row = new Vector();
            row.add(list.get(i).getId());
            row.add(pro.getFullName());
            row.add(grade.getNameGrade());
            row.add(pro.getEmail());
            row.add(pro.isGender());
            row.add(pro.getIdNumber());
            row.add(pro.getCurrentAddress());
            row.add("<html><a href='Detail' >Detail</a></html>");
            row.add("<html><a href='Delete' >Delete</a></html>");

            model.addRow(row);
        }
        tbStudent.setModel(model);
        tbStudent.setRowSelectionAllowed(true);
        //  tbStudent.setCellSelectionEnabled(true);
        tbStudent.setFocusable(false);
    }

    private void tfSearchEvent() {
        tfSearch.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String text = tfSearch.getText();
                TableRowSorter<AbstractTableModel> sorter = new TableRowSorter<>();
                sorter.setModel(model);
                RowFilter<AbstractTableModel, Object> filter = RowFilter.regexFilter("(?i)" + text);
                sorter.setRowFilter(filter);
                tbStudent.setRowSorter(sorter);
            }
        });
    }

    private void btAddEvents() {
        defaultFont = btAdd.getFont();
        btAdd.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                btAdd.setFont(newFont);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btAdd.setFont(defaultFont);
            }

        });
    }

    private void btEditEvents() {
        btDelete.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                btDelete.setFont(newFont);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btDelete.setFont(defaultFont);
            }

        });
    }

    private void btShowEvents() {
        showButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                String name = tfSearch.getText();
                int currentStudentQuantity = (int) listStudents.stream().filter(t -> t.getGrade().getNameGrade().equals(name)).count();
                if (!grades.stream().anyMatch(t -> t.getNameGrade().equals(name))) {
                    JOptionPane.showMessageDialog(StudentInformationPanel.this,
                            "This grade is not exists. Try again!!!", "Notification",
                            JOptionPane.OK_OPTION, ImageUtils.loadImageIcon(getClass().getResource("/images/alarm.png").getPath()));
                } else {
                    Grade grade = grades.stream().filter(t -> t.getNameGrade().equals(name)).findFirst().get();
                    lbFulname.setText(grade.getNameGrade());
                    lbStudentQuantity.setText(currentStudentQuantity + "/" + grade.getStudentQuantity());
                    lbStartTime.setText(grade.getStartTime().toString());
                    lbEndTime.setText(grade.getEndTime().toString());
                    lbTeacher.setText(grade.getTeacher().getProfileTeacher().getFullName());
                }
            }
        }
        );
    }

    private void detailColumnEvents() {
        tbStudent.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = tbStudent.rowAtPoint(evt.getPoint());
                int col = tbStudent.columnAtPoint(evt.getPoint());
                int i = tbStudent.getSelectedRow();
                if ((row >= 0 && col == 7)) {
                    StudentOfficial student = listStudents.stream().filter(t -> t.getId().equals(tbStudent.getValueAt(row, 0))).findFirst().get();
                    DetailStudentOfficialForm form = new DetailStudentOfficialForm(student, model,row);
                    form.setVisible(true);
                    System.out.println(student);
//                    model.setValueAt(student.getId(), i, 0);
//                    model.setValueAt(student.getProfile().getFullName(), i, 1);
//                    model.setValueAt(student.getGrade().getNameGrade(), i, 2);
//                    model.setValueAt(student.getProfile().getEmail(), i, 3);
//                    model.setValueAt(student.getProfile().isGender(), i, 4);
//                    model.setValueAt(student.getProfile().getIdNumber(), i, 5);
//                    model.setValueAt(student.getProfile().getCurrentAddress(), i, 6);
//                    model.updateFile(model.);

                }
            }
        });
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTop = new javax.swing.JPanel();
        lbFind = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        btEdit1 = new javax.swing.JButton();
        pnBottom = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbFulname = new javax.swing.JLabel();
        lbStudentQuantity = new javax.swing.JLabel();
        lbStartTime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbEndTime = new javax.swing.JLabel();
        lbTeacher = new javax.swing.JLabel();
        lbAvatarCourse = new javax.swing.JLabel();
        pnCenter = new javax.swing.JPanel();
        jSGrade = new javax.swing.JScrollPane();
        tbStudent = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1587, 903));
        setLayout(new java.awt.BorderLayout());

        pnTop.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 2, 5, 2), javax.swing.BorderFactory.createEtchedBorder()));

        lbFind.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbFind.setText("Search");

        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        btAdd.setBackground(new java.awt.Color(153, 0, 153));
        btAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btAdd.setForeground(new java.awt.Color(255, 255, 255));
        btAdd.setText("Add Student");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btDelete.setBackground(new java.awt.Color(255, 102, 102));
        btDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btDelete.setForeground(new java.awt.Color(255, 255, 255));
        btDelete.setText("Delete");
        btDelete.setMaximumSize(new java.awt.Dimension(67, 25));
        btDelete.setMinimumSize(new java.awt.Dimension(67, 25));
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        showButton.setBackground(new java.awt.Color(153, 153, 255));
        showButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        showButton.setForeground(new java.awt.Color(255, 255, 255));
        showButton.setText("Show");
        showButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        showButton.setFocusPainted(false);

        btEdit1.setBackground(new java.awt.Color(255, 102, 102));
        btEdit1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btEdit1.setForeground(new java.awt.Color(255, 255, 255));
        btEdit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btEdit1.setText("Edit");
        btEdit1.setMaximumSize(new java.awt.Dimension(67, 25));
        btEdit1.setMinimumSize(new java.awt.Dimension(67, 25));
        btEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEdit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnTopLayout = new javax.swing.GroupLayout(pnTop);
        pnTop.setLayout(pnTopLayout);
        pnTopLayout.setHorizontalGroup(
            pnTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(showButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        pnTopLayout.setVerticalGroup(
            pnTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTopLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFind)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd)
                    .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 11, Short.MAX_VALUE))
        );

        add(pnTop, java.awt.BorderLayout.PAGE_START);

        pnBottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information Of Grade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        pnBottom.setPreferredSize(new java.awt.Dimension(400, 100));

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Student Quantity");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Start time:");

        lbFulname.setText("............");

        lbStudentQuantity.setText("............");

        lbStartTime.setText("...........");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("End time:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Teacher");

        lbEndTime.setText("..........");

        lbTeacher.setText(".......");

        javax.swing.GroupLayout pnBottomLayout = new javax.swing.GroupLayout(pnBottom);
        pnBottom.setLayout(pnBottomLayout);
        pnBottomLayout.setHorizontalGroup(
            pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbStudentQuantity)
                    .addComponent(lbFulname))
                .addGap(155, 155, 155)
                .addComponent(lbAvatarCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBottomLayout.createSequentialGroup()
                        .addComponent(lbEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(362, Short.MAX_VALUE))
                    .addGroup(pnBottomLayout.createSequentialGroup()
                        .addComponent(lbStartTime)
                        .addGap(100, 100, 100)
                        .addComponent(jLabel8)
                        .addGap(30, 30, 30)
                        .addComponent(lbTeacher)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnBottomLayout.setVerticalGroup(
            pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBottomLayout.createSequentialGroup()
                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBottomLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(lbTeacher))
                        .addGap(28, 28, 28))
                    .addComponent(lbAvatarCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnBottomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBottomLayout.createSequentialGroup()
                                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameLabel)
                                    .addComponent(lbFulname))
                                .addGap(18, 18, 18)
                                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lbStudentQuantity))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnBottomLayout.createSequentialGroup()
                                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(lbStartTime))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(lbEndTime))))))
                .addContainerGap())
        );

        add(pnBottom, java.awt.BorderLayout.PAGE_END);

        pnCenter.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13), new java.awt.Color(255, 0, 0))); // NOI18N
        pnCenter.setLayout(null);

        tbStudent.setAutoCreateRowSorter(true);
        tbStudent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "IdNumber", "Grade", "Detail", "Delete"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbStudent.setColumnSelectionAllowed(true);
        tbStudent.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jSGrade.setViewportView(tbStudent);
        tbStudent.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbStudent.getColumnModel().getColumnCount() > 0) {
            tbStudent.getColumnModel().getColumn(5).setResizable(false);
        }
        tbStudent.getAccessibleContext().setAccessibleParent(pnCenter);

        pnCenter.add(jSGrade);
        jSGrade.setBounds(7, 19, 930, 300);

        add(pnCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEdit1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btEdit1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jSGrade;
    private javax.swing.JLabel lbAvatarCourse;
    private javax.swing.JLabel lbEndTime;
    private javax.swing.JLabel lbFind;
    private javax.swing.JLabel lbFulname;
    private javax.swing.JLabel lbStartTime;
    private javax.swing.JLabel lbStudentQuantity;
    private javax.swing.JLabel lbTeacher;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel pnBottom;
    private javax.swing.JPanel pnCenter;
    private javax.swing.JPanel pnTop;
    private javax.swing.JButton showButton;
    private javax.swing.JTable tbStudent;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    private StudentOfficialService soService = new StudentOfficialServiceImpl();
    private GradeService gradeService = new GradeServiceImpl();
    private final List<StudentOfficial> listStudents = soService.getAll();
    private final List<Grade> grades = gradeService.getAll();

}
